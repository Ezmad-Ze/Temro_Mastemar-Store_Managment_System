// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TemroMastemar.Data;

#nullable disable

namespace TemroMastemar.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220903113353_migration 5")]
    partial class migration5
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("TemroMastemar.Models.Literature", b =>
                {
                    b.Property<int>("LiteratureID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LiteratureID"), 1L, 1);

                    b.Property<string>("Document")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LiteratureFor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LiteratureTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LiteratureType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MemberID")
                        .HasColumnType("int");

                    b.Property<int?>("WrittenMonth")
                        .HasColumnType("int");

                    b.Property<int?>("WrittenYear")
                        .HasColumnType("int");

                    b.HasKey("LiteratureID");

                    b.HasIndex("MemberID");

                    b.ToTable("Literatures");
                });

            modelBuilder.Entity("TemroMastemar.Models.Member", b =>
                {
                    b.Property<int>("MemberID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MemberID"), 1L, 1);

                    b.Property<string>("Babtisal_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Committe_Choice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Current_Committee")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DateofBirth")
                        .HasColumnType("int");

                    b.Property<int?>("EC_House_Number")
                        .HasColumnType("int");

                    b.Property<string>("EC_Phone_Number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EC_Relation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EC_Sub_City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EC_Woreda")
                        .HasColumnType("int");

                    b.Property<string>("Education_Field")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Education_Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmergencyContactName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GrandFather_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("House_Number")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsAlive")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Marital_Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MonthofBirth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mother_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nationality")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Organization_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone_Number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlaceofBirth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sub_City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Woreda")
                        .HasColumnType("int");

                    b.Property<string>("WorkingIn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("YearofBirth")
                        .HasColumnType("int");

                    b.Property<string>("YearofMembership")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MemberID");

                    b.ToTable("Members");
                });

            modelBuilder.Entity("TemroMastemar.Models.Literature", b =>
                {
                    b.HasOne("TemroMastemar.Models.Member", "member")
                        .WithMany()
                        .HasForeignKey("MemberID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("member");
                });
#pragma warning restore 612, 618
        }
    }
}
